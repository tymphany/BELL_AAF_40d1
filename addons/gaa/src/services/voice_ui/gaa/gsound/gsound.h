// Copyright 2018 Google LLC.
#ifndef GSOUND_H
#define GSOUND_H

/*
 * TODO(Qualcomm): Please move any type platform specific includes from
 *                 gsound.h to gsound_types.h.  gsound.h needs to be equal
 *                 to the "else" part of the following "#if 1"
 */
#if 1
#include <stdbool.h>
#include <app/bluestack/types.h>
#include <string.h>
#else
#include "gsound_types.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef GSOUND_BUILD_ID
#define GSOUND_BUILD_ID "1b3d6ee"
#endif

/**
 * This header file was generated by Google GSound Services,
 * it should not be altered in any way. Please treat this as
 * a read-only file.
 *
 * GSound - Common status and
 * return codes.
 */
typedef enum {
  GSOUND_STATUS_OK = 0,
  GSOUND_STATUS_ERROR,
  GSOUND_STATUS_OUT_OF_MEMORY,
  GSOUND_STATUS_OTA_NOT_RECEIVING,
  GSOUND_STATUS_OTA_ERROR_INCORRECT_CHECKSUM,
  GSOUND_STATUS_OTA_ERROR_OTHER
} GSoundStatus;

/**
 * Transport Types required by GSound
 */
typedef enum {
  GSOUND_TRANSPORT_NONE,
  GSOUND_TRANSPORT_RFCOMM,
  GSOUND_TRANSPORT_BLE
} GSoundTransport;

/**
 * Number of channels required for each
 * Transport type
 */
typedef enum {
  GSOUND_CHANNEL_CONTROL,
  GSOUND_CHANNEL_AUDIO,
  GSOUND_NUM_CHANNEL_TYPES
} GSoundChannelType;

/**
 * Bluetooth Device Address
 * BD_ADDR size in bytes
 */
#define GSOUND_BT_NAP_SIZE 2
#define GSOUND_BT_UAP_SIZE 1
#define GSOUND_BT_LAP_SIZE 3

/**
 * BD_ADDR GSound Format
 */
typedef struct {
  uint16_t nap;
  uint8_t uap;
  uint32_t lap;
} GSoundBTAddr;

#ifdef __cplusplus
}
#endif

#endif  // GSOUND_H
